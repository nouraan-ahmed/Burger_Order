{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Layout/Layout.css","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux.js","assets/images/27.1 burger-logo.png.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationitem","NavigationItem","to","link","exact","activeClassName","active","navigationitems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","SideDrawerClosedHandler","setState","SideDrawerToggleHandler","prevState","this","Content","Component","burgerIngredient","ingredient","type","BreadBottom","BreadTop","seeds1","seeds2","Meat","Cheese","Bacon","Salad","burger","ingredientsArr","Object","keys","ingredients","map","igKey","Array","_","i","reduce","prev","curr","concat","length","Burger","buildControl","BuildControl","Label","label","More","added","Less","removed","disabled","controls","buildControls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinue","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","reqInterceptor","resInterceptor","errorHandler","interceptors","request","use","req","response","res","eject","message","ADD_INGREDIENT","REMOVE_INGREDIENT","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","sum","disabledInfo","ings","key","orderSummary","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","totalPrice","dispatch","ingName","actionTypes","ingredientName","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","elemetConfig","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formelIdentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","chekoutCancelled","goBack","replace","path","match","component","amount","ingOutput","ig","display","border","padding","Order","Number","parseFloat","orders","get","fetchedOrders","data","err","App","Orders","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","salad","bacon","cheese","meat","INGREGIENT_PRICES","reducer","action","store","createStore","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cec83e12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__1UbSh\",\"BreadTop\":\"BurgerIngredient__BreadTop__d94JO\",\"Seeds1\":\"BurgerIngredient__Seeds1__1Odq_\",\"Seeds2\":\"BurgerIngredient__Seeds2__3PsG4\",\"Meat\":\"BurgerIngredient__Meat__1fXGJ\",\"Cheese\":\"BurgerIngredient__Cheese__3MB6x\",\"Salad\":\"BurgerIngredient__Salad__zQem8\",\"Bacon\":\"BurgerIngredient__Bacon__1El-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__upDK9\",\"Open\":\"SideDrawer__Open__18rb-\",\"Close\":\"SideDrawer__Close__3ko5V\",\"Logo\":\"SideDrawer__Logo__B4FbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__2zYRW\",\"Label\":\"BuildControl__Label__2mOXk\",\"Less\":\"BuildControl__Less__20ieq\",\"More\":\"BuildControl__More__29mgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__2JD9x\",\"Label\":\"Input__Label__1BS4V\",\"InputElement\":\"Input__InputElement__2h6u9\",\"Invalid\":\"Input__Invalid__3PMZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2N0TS\",\"Logo\":\"Toolbar__Logo__LWn5r\",\"DesktopOnly\":\"Toolbar__DesktopOnly__13qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3e0yI\",\"active\":\"NavigationItem__active__3DeVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__bpFGs\",\"OrderButton\":\"BuildControls__OrderButton__L9P-q\",\"enable\":\"BuildControls__enable__3VXZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__3bi60\",\"Success\":\"Button__Success__3LPfr\",\"Danger\":\"Button__Danger__3Zyj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__2jRP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2kHbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3tGJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1uXwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__1m7c-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"burger__Burger__3_FWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__3F8O4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__2pG5S\",\"load4\":\"Spinner__load4__2eyN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__j_q_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__Ol2yT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__2n5n7\"};","const aux = (props) => props.children;\n\nexport default aux;","export default __webpack_public_path__ + \"static/media/27.1 burger-logo.png.ec69c7f6.png\";","import React from 'react';\nimport burgerLogo from '../../assets/images/27.1 burger-logo.png.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"MYBURGER\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavigationItem.css';\n\nconst navigationitem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationitem;","import React from 'react';\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationitems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact active>Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\" active>Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationitems;","import React from 'react';\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className={classes.Logo}>\n            <Logo/>\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked} ></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop'; \nimport Aux from '../../../hoc/Aux';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo/>\n                </div>\n                <nav>\n                    <NavigationItems/>\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React,{Component} from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.css';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer:true,\n    }\n\n    SideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer:false});\n    }\n    SideDrawerToggleHandler = () => {\n        //Due to async nature of set state this will not work properly so we need to use prevstate\n        //this.setState({showSideDrawer:! this.state.showSideDrawer});\n        this.setState((prevState) => {\n            return { showSideDrawer: ! prevState.showSideDrawer};\n        });\n    }\n\n    render(){\n        return (\n        <Aux>\n        <Toolbar drawerToggleClicked={this.SideDrawerToggleHandler}/>\n        <SideDrawer \n            open={this.state.showSideDrawer} \n            closed={this.SideDrawerClosedHandler} />\n        <main className={classes.Content}>\n            {this.props.children}\n        </main>\n        </Aux>\n        )\n    }\n}\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredient.css';\n\nconst burgerIngredient = (props) => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.seeds1}></div>\n                    <div className={classes.seeds2}></div>\n                </div>\n            );\n            break;\n        case ('meat'): \n            ingredient = <div className={classes.Meat}></div>\n            break;\n        case ('cheese'): \n            ingredient = <div className={classes.Cheese}></div>\n            break;\n        case ('bacon'): \n            ingredient = <div className={classes.Bacon}></div>\n            break;\n        case ('salad'): \n            ingredient = <div className={classes.Salad}></div>\n            break;\n        default:\n            ingredient = null;\n    }\n    return ingredient;\n};\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default burgerIngredient;","import React from 'react';\nimport classes from './burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n\n    //convert object to an array\n    let ingredientsArr = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key={igKey+i} type={igKey} />\n        });\n    })\n    .reduce((prev, curr) => {\n        return prev.concat(curr);\n    },[]);\n\n    if(ingredientsArr.length === 0){\n        ingredientsArr = <p>Please Start Adding Ingredients</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {ingredientsArr}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.More}\n            onClick={props.added}>+</button>\n        <button \n            className={classes.Less} \n            onClick={props.removed}\n            disabled={props.disabled}>-</button>\n    </div>\n);\n\nexport default buildControl;\n\n","import React from 'react';\nimport BuildControl from '../BuildControls/BuildControl/BuildControl';\nimport classes from './BuildControls.css';\n\nconst controls = [\n    {label:'Salad',type:'salad'},\n    {label:'Bacon',type:'bacon'},\n    {label:'Cheese',type:'cheese'},\n    {label:'Meat',type:'meat'}\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price : <strong>{props.price.toFixed(2)}</strong></p>\n        {\n        controls.map(control => (\n            <BuildControl \n                key={control.label} \n                label={control.label} \n                added={() => props.ingredientAdded(control.type)}\n                removed={() => props.ingredientRemoved(control.type)}\n                disabled={props.disabled[control.type]}\n            />\n        ))\n        }\n        <button \n            className={classes.OrderButton} \n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React,{Component} from 'react';\nimport classes from './Modal.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate(){\n        console.log('component willupdate')\n    }\n\n    render(){\n        return(\n            <Aux>\n            <Backdrop \n                show={this.props.show} \n                    clicked={this.props.modalClosed} />\n            <div \n                className={classes.Modal}\n                style={{\n                transform: this.props.show? 'translateY(0)': 'translateY(-100vh)',\n                opacity: this.props.show? '1' : '0'\n                }}>\n                {this.props.children}\n            </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Modal;","import classes from './Button.css';\nimport React from 'react';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React,{Component} from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component  {\n\n    componentWillUpdate(){\n        console.log('[OrderSummary] willupdate')\n    }\n\n    render(){\n\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map((igKey) => {\n            return (\n                <li key={igKey}>\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>\n                 : {this.props.ingredients[igKey]}\n                </li>\n            );\n        });\n\n        return(\n            <Aux>\n            <h3>Your Order</h3>\n            <p>Your Favorite Burger With The Following Ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price : {this.props.price}</strong></p>\n            <p>Continue to Check Out ?!!</p>\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinue}>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burger-a8a21-default-rtdb.firebaseio.com/'\n});\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.css';\n\n\nconst spinner = () =>(\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, {Component} from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../../hoc/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        state = {\n            error:null,\n            reqInterceptor:null,\n            resInterceptor:null,\n        }\n\n        componentWillMount(){\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error:null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount(){\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorHandler = () => {\n            this.setState({error:null});\n        }\n\n        render(){\n            return (\n                <Aux>\n                <Modal \n                    show={this.state.error}\n                    modalClosed={this.errorHandler}>\n                    {this.state.error?this.state.error.message:null}\n                </Modal>\n                <WrappedComponent {...this.props} />\n            </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions';\n\nclass BurgerBuilder extends Component{\n\n    state = {\n        purchasing: false,\n        loading:false,\n        error:false\n    }\n\n    componentDidMount(){\n        console.log(this.props);\n        // axios.get('https://burger-a8a21-default-rtdb.firebaseio.com/ingredients.json')\n        // .then(response => {\n        //     this.setState({\n        //         ingredients: response.data\n        //     });\n        // })\n        // .catch(error => {\n        //     this.setState({error:true});\n        // });\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, curr) => {\n                return sum + curr;\n            },0);\n        return sum > 0\n    }\n\n    // addIngredientHandler = (type) => {\n    //     const oldCount = this.state.ingredients[type];\n    //     const updatedCount = oldCount + 1;\n    //     const updatedIngredients = {\n    //         ...this.state.ingredients\n    //     };\n    //     updatedIngredients[type] = updatedCount;\n    //     const priceAddition = INGREGIENT_PRICES[type];\n    //     const oldPrice = this.state.totalPrice;\n    //     const newPrice = oldPrice + priceAddition;\n    //     this.setState({\n    //         ingredients: updatedIngredients,\n    //         totalPrice: newPrice\n    //     });\n    //     this.updatePurchaseState(updatedIngredients);\n    // }\n\n    // removeIngredientHandler = (type) => {\n    //     const oldCount = this.state.ingredients[type];\n    //     if(oldCount<=0){\n    //         return;\n    //     }\n    //     const updatedCount = oldCount - 1;\n    //     const updatedIngredients = {\n    //         ...this.state.ingredients\n    //     };\n    //     updatedIngredients[type] = updatedCount;\n    //     const priceDeduction = INGREGIENT_PRICES[type];\n    //     const oldPrice = this.state.totalPrice;\n    //     const newPrice = oldPrice - priceDeduction;\n    //     this.setState({\n    //         ingredients: updatedIngredients,\n    //         totalPrice: newPrice\n    //     });\n    //     this.updatePurchaseState(updatedIngredients);\n    // }\n\n    purchaseHandler = () => {\n        this.setState({purchasing:true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing:false});\n    }\n    \n    purchaseContinueHandler = () => {\n\n        // const queryParams = [];\n        // for(let i in this.state.ingredients){\n        //     queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\n        // }\n\n        // queryParams.push('price=' + this.props.price);\n\n        // const queryString = queryParams.join('&');\n\n        this.props.history.push('/checkout');\n    }\n\n    render(){\n\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n\n        let orderSummary=null;\n\n        let burger = this.state.error? <p>Ingredients cannot be loaded</p>: <Spinner/>\n\n        if(this.props.ings){\n        burger = (\n            <Aux>\n                <Burger ingredients = {this.props.ings} />\n                <BuildControls \n                    ingredientAdded = {this.props.onIngredientAdded}\n                    ingredientRemoved = {this.props.onIngredientRemoved}\n                    disabled = {disabledInfo} \n                    purchasable={this.updatePurchaseState(this.props.ings)}\n                    price = {this.props.price}\n                    ordered = {this.purchaseHandler}/> \n            </Aux>\n            );\n        orderSummary = \n        <OrderSummary \n            ingredients={this.props.ings}\n            purchaseCancelled={this.purchaseCancelHandler}\n            purchaseContinue={this.purchaseContinueHandler}\n            price = {this.props.price.toFixed(2)}/> ;\n        }\n\n        if(this.state.loading){\n            orderSummary = <Spinner/> ;\n        }\n\n        return(\n            <Aux>\n                <Modal \n                    show={this.state.purchasing} \n                        modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price:state.totalPrice\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName}),\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import React from 'react';\n\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css'\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width:'100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch(props.elementType) {\n        case('input'):\n        inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\n        break;\n        case('textarea'):\n            inputElement= <textarea className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\n            break;\n        case('select'):\n            inputElement = (\n                <select \n                    className={inputClasses.join(' ')} \n                    value={props.value} onChange={props.changed}> \n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}/>\n    }\n\n\nreturn(\n    <div className={classes.Input}>\n        <label className={classes.Label}>{props.label}</label>\n        {inputElement}\n    </div>\n)\n\n}\n\nexport default input;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport Input from '../../../components/UI/Input/Input';\nimport axios from '../../../axios-orders';\n\nclass ContactData extends Component {\n\n    state={\n        orderForm:{\n            name:{\n                elementType: 'input',\n                elemetConfig: {\n                    type:'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            street:{\n                elementType: 'input',\n                elemetConfig: {\n                    type:'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            zipCode: {\n                elementType: 'input',\n                elemetConfig: {\n                    type:'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation:{\n                    required:true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid:false,\n                touched:false\n            },\n            country: {\n                elementType: 'input',\n                elemetConfig: {\n                    type:'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            email: {\n                elementType: 'input',\n                elemetConfig: {\n                    type:'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elemetConfig: {\n                    options:[\n                        {value:'fastest',displayValue: 'Fastest'},\n                        {value:'cheapest',displayValue: 'Cheapest'},\n                    ]\n                },\n                value: 'fastest',\n                validation:{},\n                valid:true\n            },\n        },\n        loading:false,\n        formIsValid:false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({loading:true});\n        const formData = {};\n        for(let formelIdentifier in this.state.orderForm){\n            formData[formelIdentifier]=this.state.orderForm[formelIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }\n        axios.post('/orders.json',order).then(\n            response => {\n                this.setState({loading:false});\n                this.props.history.push('/');\n            }\n        ).catch(error => {\n            this.setState({loading:false});\n        });\n    }\n\n    checkValidity(value, rules){\n        let isValid = true;\n\n        if(rules.required){\n            isValid = (value.trim()!== '') && isValid;\n        }\n\n        if(rules.minLength){\n            isValid = (value.length >= rules.minLength) && isValid;\n        }\n\n        if(rules.maxLength){\n            isValid = (value.length <=rules.maxLength) && isValid;\n        }\n\n        return isValid; \n    }\n\n    inputChangedHandler = (event,inputIdentifier) => {\n\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n\n        this.setState({\n            orderForm:updatedOrderForm,\n            formIsValid:formIsValid\n        });\n\n    }\n\n    render() {\n\n        const formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id:key,\n                config:this.state.orderForm[key]\n            })\n        }\n\n        let form =(\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elemetConfig} \n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event)=>this.inputChangedHandler(event,formElement.id)}/>\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if(this.state.loading){\n            form= <Spinner/>;\n        }\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        ings:state.ingredients,\n        price:state.totalPrice\n    }\n};\n\nexport default connect(mapStateToProps)(ContactData);","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    // componentWillMount() {\n    //     const query = new URLSearchParams(this.props.location.search);\n    //     const ingredients = {};\n    //     let price =0;\n    //     for(let param of query.entries()){\n    //         //['salad', '1']\n    //         if(param[0]==='price'){\n    //             price=param[1];\n    //         }else{\n    //             ingredients[param[0]] = +param[1];\n    //         }\n    //     }\n    //     this.setState({\n    //         ingredients:ingredients,\n    //         totalPrice: price\n    //     });\n    // }\n\n    chekoutCancelled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        return (\n            <div>\n                <CheckoutSummary \n                    ingredients={this.props.ings}\n                    chekoutCancelled={this.checkoutCancelled}\n                    checkoutContinued={this.checkoutContinued}/>\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    // render={(props)=> <ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />} \n                    component={ContactData} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients\n    }\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for(let ingName in props.order.ingredients){\n        ingredients.push({\n            name: ingName,\n            amount: props.order.ingredients[ingName]\n        });\n    }\n    console.log(props);\n    const ingOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform:'capitalize',\n                display:'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding:'5px',\n            }}\n            key={ig.name}>\n            {ig.name} ({ig.amount})\n            </span>\n    });\n\n    return (\n    <div className={classes.Order}>\n        <p>Ingredients: {ingOutput} </p>\n        <p>Price: <strong>USD {Number.parseFloat(props.order.price).toFixed(2)}</strong></p>\n    </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\n\nimport axios from '../../axios-orders';\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n\n    state={\n        orders:[],\n        loading:true\n    }\n\n    componentDidMount(){\n        axios.get('/orders.json')\n        .then(response => {\n            const fetchedOrders = [];\n            for(let key in response.data) {\n                fetchedOrders.push({\n                    ...response.data[key],\n                    id: key\n                });\n            }\n            this.setState({loading:false, orders:fetchedOrders});\n        }).catch(err=>{\n            this.setState({loading:false});\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id} \n                        order={order}/>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders,axios);","import React,{Component} from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport {Route} from 'react-router-dom';\n\n\nclass App extends Component {\n\n  // state={\n  //     show:true\n  // }\n\n  // componentDidMount(){\n  //   setTimeout(() => {\n  //       this.setState({show:false});\n  //   },5000);\n  // }\n\n  render(){\n    return (\n      <div>\n        <Layout>\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    ingredients: {\n        salad:0,\n        bacon:0,\n        cheese:0,\n        meat:0,\n    },\n    totalPrice: 4\n};\n\nconst INGREGIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\n\nconst reducer = (state = initialState, action)=>{\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT:\n            return{\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREGIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return{\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - INGREGIENT_PRICES[action.ingredientName]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport { createStore} from 'redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}