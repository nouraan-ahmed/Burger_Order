{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css"],"names":["checkoutSummary","props","className","classes","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elemetConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formelIdentifier","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","setState","formElementsArray","key","this","push","id","config","form","onSubmit","map","formElement","Input","elementConfig","invalid","shouldValidate","changed","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","chekoutCancelled","history","goBack","replace","summary","to","purchaseRedirect","purchased","path","match","component","onInitPurchase","input","inputElement","inputClasses","InputElement","Invalid","join","onChange","option","Label","label","module","exports"],"mappings":"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","file":"static/js/3.935cdb04.chunk.js","sourcesContent":["import React from 'react';\n\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css'\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width:'100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport Input from '../../../components/UI/Input/Input';\nimport axios from '../../../axios-orders';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\nimport {updateObject,checkValidity} from '../../../shared/utility';\n\n\nclass ContactData extends Component {\n\n    state={\n        orderForm:{\n            name:{\n                elementType: 'input',\n                elemetConfig: {\n                    type:'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            street:{\n                elementType: 'input',\n                elemetConfig: {\n                    type:'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            zipCode: {\n                elementType: 'input',\n                elemetConfig: {\n                    type:'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation:{\n                    required:true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid:false,\n                touched:false\n            },\n            country: {\n                elementType: 'input',\n                elemetConfig: {\n                    type:'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            email: {\n                elementType: 'input',\n                elemetConfig: {\n                    type:'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elemetConfig: {\n                    options:[\n                        {value:'fastest',displayValue: 'Fastest'},\n                        {value:'cheapest',displayValue: 'Cheapest'},\n                    ]\n                },\n                value: 'fastest',\n                validation:{},\n                valid:true\n            },\n        },\n        formIsValid:false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for(let formelIdentifier in this.state.orderForm){\n            formData[formelIdentifier]=this.state.orderForm[formelIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        }\n        this.props.onOrderBurger(order,this.props.token);\n    }\n\n    inputChangedHandler = (event,inputIdentifier) => {\n\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier],{\n            value: event.target.value,\n            valid: checkValidity(this.state.orderForm[inputIdentifier].value,this.state.orderForm[inputIdentifier].validation),\n            touched: true,\n        });\n\n\n        const updatedOrderForm = updateObject(this.state.orderForm,{\n            [inputIdentifier]: updatedFormElement\n        }); \n\n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({\n            orderForm:updatedOrderForm,\n            formIsValid:formIsValid\n        });\n\n    }\n\n    render() {\n\n        const formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id:key,\n                config:this.state.orderForm[key]\n            })\n        }\n\n        let form =(\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elemetConfig} \n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event)=>this.inputChangedHandler(event,formElement.id)}/>\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if(this.props.loading){\n            form= <Spinner/>;\n        }\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        ings:state.burgerBuilder.ingredients,\n        price:state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token:state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler( ContactData, axios ));","import React, { Component } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport {connect} from 'react-redux';\nimport ContactData from './ContactData/ContactData';\nimport * as actions from '../../store/actions/index';\n\nclass Checkout extends Component {\n\n    chekoutCancelled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />\n        if(this.props.ings){\n            const purchaseRedirect = this.props.purchased ? <Redirect to =\"/\"/> : null ;\n            summary = (\n                <div>\n                    {purchaseRedirect}\n                    <CheckoutSummary \n                    ingredients={this.props.ings}\n                    chekoutCancelled={this.checkoutCancelled}\n                    checkoutContinued={this.checkoutContinued}/>\n                    <Route \n                    path={this.props.match.path + '/contact-data'} \n                    // render={(props)=> <ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />} \n                    component={ContactData} />\n                </div>\n            );\n            \n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onInitPurchase: () => dispatch(actions.purchaseInit())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","import React from 'react';\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch(props.elementType) {\n        case('input'):\n        inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\n        break;\n        case('textarea'):\n            inputElement= <textarea className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\n            break;\n        case('select'):\n            inputElement = (\n                <select \n                    className={inputClasses.join(' ')} \n                    value={props.value} onChange={props.changed}> \n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}/>\n    }\n\n\nreturn(\n    <div className={classes.Input}>\n        <label className={classes.Label}>{props.label}</label>\n        {inputElement}\n    </div>\n)\n\n}\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__2JD9x\",\"Label\":\"Input__Label__1BS4V\",\"InputElement\":\"Input__InputElement__2h6u9\",\"Invalid\":\"Input__Invalid__3PMZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__j_q_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__Ol2yT\"};"],"sourceRoot":""}