{"ast":null,"code":"var _jsxFileName = \"/home/nuraah/Documents/React Apps/burger/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREGIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREGIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREGIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert('You continue!');\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, curr) => {\n      return sum + curr;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n          ingredients: this.state.ingredients,\n          purchaseCanceled: this.purchaseCancelHandler,\n          purchaseContinue: this.purchaseContinueHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        price: this.state.totalPrice,\n        ordered: this.purchaseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/nuraah/Documents/React Apps/burger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREGIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","sum","Object","keys","map","igKey","reduce","curr","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\n\nconst INGREGIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component{\n\n    state = {\n        ingredients:{\n            salad:0,\n            bacon:0,\n            cheese:0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, curr) => {\n                return sum + curr;\n            },0);\n        this.setState({\n            purchasable: sum > 0\n        });\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREGIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount<=0){\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREGIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing:true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing:false});\n    }\n    \n    purchaseContinueHandler = () => {\n        alert('You continue!');\n    }\n\n    render(){\n\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n\n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary \n                        ingredients={this.state.ingredients}\n                        purchaseCanceled={this.purchaseCancelHandler}\n                        purchaseContinue={this.purchaseContinueHandler}/>\n                </Modal>\n                <Burger ingredients = {this.state.ingredients} />\n                <BuildControls \n                    ingredientAdded = {this.addIngredientHandler}\n                    ingredientRemoved = {this.removeIngredientHandler}\n                    disabled = {disabledInfo} \n                    purchasable={this.state.purchasable}\n                    price = {this.state.totalPrice}\n                    ordered = {this.purchaseHandler}/>\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}